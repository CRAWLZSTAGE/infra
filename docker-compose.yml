version: "3"

services:
  db:
    build: ./db
    volumes:
      - /mnt/sdc:/mnt/sdc
    ports:
      - 5432:5432
  mqtt:
    build: ./mqtt
    links:
      - nginx-proxy
    depends_on:
      - nginx-proxy
    environment:
      - VIRTUAL_HOST=rabbitmq.crawlz.me
      - VIRTUAL_PORT=15672
      - HTTPS_METHOD=redirect
    restart: always
  fetch:
    build: ./fetch
    links:
      - mqtt
    depends_on:
      - mqtt
    env_file: _deployment/fetch.env
    restart: always
    deploy:
      replicas: 10
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 2s
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
      placement:
        constraints: [node.role == worker, engine.labels.db == true]
    cap_add:
      - sys_ptrace
  parser:
    build: ./parser
    links:
      - mqtt
    depends_on:
      - mqtt
    restart: always
  store:
    build: ./store
    links:
      - mqtt
      - db
    depends_on:
      - mqtt
      - db
    restart: always
  filter:
    build: ./filter
    links:
      - mqtt
      - db
    depends_on:
      - mqtt
      - db
    restart: always
  search_backend:
    build: ./search_backend
    env_file: _deployment/fetch.env
    links:
      - mqtt
      - db
      - nginx-proxy
    depends_on:
      - mqtt
      - db
    environment:
      - VIRTUAL_HOST=backend.crawlz.me
      - HTTPS_METHOD=redirect
    restart: always
  search_frontend:
    build: ./search_frontend
    env_file: _deployment/fetch.env
    links:
      - nginx-proxy
    depends_on:
      - search_backend
    environment:
      - VIRTUAL_HOST=crawlz.me,frontend.crawlz.me
      - HTTPS_METHOD=redirect
    restart: always
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /root/ssl:/etc/nginx/certs
    restart: always





